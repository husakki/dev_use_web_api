<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>use</artifactId>
        <groupId>org.tzi.use</groupId>
        <version>7.1.1</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>use-api</artifactId>


    <properties>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>3.1.5</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <artifactId>use</artifactId>
            <groupId>org.tzi.use</groupId>
            <version>7.1.1</version>
            <type>pom</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-graphql</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.30</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-hateoas</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <version>3.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.5.0</version> <!-- or the latest version -->
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webflux</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.graphql</groupId>
            <artifactId>spring-graphql-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>1.7.0</version>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>5.5.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.8.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.8.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.tzi.use</groupId>
            <artifactId>use-core</artifactId>
            <version>7.1.1</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <executable>true</executable>
                    <mainClass>org.tzi.use.UseAPIApplication</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
<!--            <plugin>-->
<!--                <groupId>com.github.joelittlejohn.embedmongo</groupId>-->
<!--                <artifactId>embedmongo-maven-plugin</artifactId>-->
<!--                <version>0.4.1</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>start-mongo-container</id>-->
<!--                        <phase>pre-integration-test</phase> &lt;!&ndash; Starts MongoDB before integration tests &ndash;&gt;-->
<!--                        <goals>-->
<!--                            <goal>-->
<!--                                start-->
<!--                            </goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <imageName>mongo:3.6</imageName> &lt;!&ndash; MongoDB Docker image &ndash;&gt;-->
<!--                            <containerName>mongo-container</containerName>-->
<!--                            <ports>-->
<!--                                <port>27017:27017</port> &lt;!&ndash; Expose MongoDB port &ndash;&gt;-->
<!--                            </ports>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
<!--                        <plugin>-->
<!--                            <groupId>org.codehaus.mojo</groupId>-->
<!--                            <artifactId>exec-maven-plugin</artifactId>-->
<!--                            <version>3.0.0</version>-->
<!--                            <executions>-->
<!--                                <execution>-->
<!--                                    <id>sleep-before-newman</id>-->
<!--                                    <phase>pre-integration-test</phase>-->
<!--                                    <goals>-->
<!--                                        <goal>exec</goal>-->
<!--                                    </goals>-->
<!--                                    <configuration>-->
<!--                                        <executable>sleep</executable>-->
<!--                                        <arguments>-->
<!--                                            <argument>10</argument> &lt;!&ndash; Adjust the duration based on your app startup time &ndash;&gt;-->
<!--                                        </arguments>-->
<!--                                    </configuration>-->
<!--                                </execution>-->
<!--                            </executions>-->
<!--                        </plugin>-->
<!--            <plugin>-->
<!--                <groupId>org.codehaus.mojo</groupId>-->
<!--                <artifactId>exec-maven-plugin</artifactId>-->
<!--                <version>3.0.0</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>start-spring-boot</id>-->
<!--                        <phase>pre-integration-test</phase>-->
<!--                        <goals>-->
<!--                            <goal>java</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <mainClass>org.tzi.use.UseAPIApplication</mainClass>-->
<!--                            <arguments>-->
<!--                                <argument>-Dspring.profiles.active=test</argument>-->
<!--                            </arguments>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
<!--            <plugin>-->
<!--                <groupId>org.codehaus.mojo</groupId>-->
<!--                <artifactId>exec-maven-plugin</artifactId>-->
<!--                <version>3.0.0</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>run-newman-tests</id>-->
<!--                        <phase>integration-test</phase>-->
<!--                        <goals>-->
<!--                            <goal>exec</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <executable>newman</executable>-->
<!--                            <arguments>-->
<!--                                <argument>run</argument>-->
<!--                                <argument>${project.basedir}/src/main/resources/postman_collection/use-webapi.postman_collection.json</argument>-->
<!--                                <argument>&#45;&#45;reporters</argument>-->
<!--                                <argument>cli</argument>-->
<!--                            </arguments>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
        </plugins>
    </build>
</project>